<Window x:Class="DiaryBot.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:DiaryBot"
        mc:Ignorable="d"
        Name="DiaryMainWindow"
        Title="DairyBot" Height="350" Width="400"
        MinHeight="350" MinWidth="400">
    <TabControl x:Name="MainWindowTabControl"
                SelectionChanged="MainWindowTabControl_SelectionChanged">
        <TabItem Header="Message">
            <Grid x:Name="Main"
                      Margin="10">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="150"/>
                </Grid.ColumnDefinitions>
                <TextBox Name="MessageTextBox"
                         Padding="5"
                         TextWrapping="Wrap"
                         TextAlignment="Justify"
                         AcceptsReturn="True"
                         VerticalScrollBarVisibility="Visible"
                         TextChanged="MessageTextBox_TextChanged">
                    <TextBox.CommandBindings>
                        <CommandBinding Command="local:FormattingCommand.SetBoldTextCmd"
                                        Executed="SetBoldCmd_Executed"
                                        CanExecute="FormattingCmd_CanExecute"/>
                        <CommandBinding Command="local:FormattingCommand.SetItalicTextCmd"
                                        Executed="SetItalicCmd_Executed"
                                        CanExecute="FormattingCmd_CanExecute"/>
                        <CommandBinding Command="local:FormattingCommand.SetUnderlineTextCmd"
                                        Executed="SetUnderlineCmd_Executed"
                                        CanExecute="FormattingCmd_CanExecute"/>
                        <CommandBinding Command="local:FormattingCommand.SetStrikethroughTextCmd"
                                        Executed="SetStrikethroughCmd_Executed"
                                        CanExecute="FormattingCmd_CanExecute"/>
                        <CommandBinding Command="local:FormattingCommand.SetSpoilerTextCmd"
                                        Executed="SetSpoilerCmd_Executed"
                                        CanExecute="FormattingCmd_CanExecute"/>
                    </TextBox.CommandBindings>
                    <TextBox.ContextMenu>
                        <ContextMenu>
                            <MenuItem Command="ApplicationCommands.Undo"/>
                            <MenuItem Command="ApplicationCommands.Redo"/>
                            <Separator/>
                            <MenuItem Command="ApplicationCommands.Copy"/>
                            <MenuItem Command="ApplicationCommands.Cut"/>
                            <MenuItem Command="ApplicationCommands.Paste"/>
                            <MenuItem Command="ApplicationCommands.Delete"/>
                            <Separator/>
                            <MenuItem Header="_Formatting">
                                <MenuItem Header="Bold"
                                          Command="local:FormattingCommand.SetBoldTextCmd"/>
                                <MenuItem Header="Italic" 
                                          Command="local:FormattingCommand.SetItalicTextCmd"/>
                                <MenuItem Header="Underline"
                                          Command="local:FormattingCommand.SetUnderlineTextCmd"/>
                                <MenuItem Header="Strikethrough"
                                          Command="local:FormattingCommand.SetStrikethroughTextCmd"/>
                                <MenuItem Header="Spoiler"
                                          Command="local:FormattingCommand.SetSpoilerTextCmd"/>
                            </MenuItem>
                            <Separator/>
                            <MenuItem Command="ApplicationCommands.SelectAll"/>
                        </ContextMenu>
                    </TextBox.ContextMenu>
                </TextBox>
                <TextBlock Name="ErrorTextBlock"
                           HorizontalAlignment="Stretch"
                           TextWrapping="Wrap"
                           TextAlignment="Center"
                           Foreground="Red"
                           FontWeight="Bold"
                           VerticalAlignment="Bottom"
                           Margin="3,0,21,5"
                           Text ="{Binding Source={x:Static local:Error.Instance}, Path=Message, NotifyOnTargetUpdated=True}">
                    <TextBlock.Triggers>
                        <EventTrigger RoutedEvent="Binding.TargetUpdated">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" To="1.0"/>
                                    <DoubleAnimation Duration="0:0:3" BeginTime="0:0:5" 
                                                     Storyboard.TargetProperty="Opacity" 
                                                     From="1.0" To="0.0"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </TextBlock.Triggers>
                </TextBlock>
                <Grid Name="ControlGrid"
                      Grid.Column="1"
                      Margin="10,0,0,0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="40"></RowDefinition>
                        <RowDefinition Height="40"></RowDefinition>
                        <RowDefinition Height="*"></RowDefinition>
                    </Grid.RowDefinitions>
                    <Button Name="SendMessageButton" 
                    Click="SendMessageButton_Click" 
                    Grid.Row="0" Margin="0,0,0,5" Height="30" 
                    VerticalAlignment="Top">Send</Button>
                    <Button Name="EditLastMessageButton" 
                    Click="EditLastMessageButton_Click" 
                    Grid.Row="1" Margin="0,0,0,5" Height="30" 
                    VerticalAlignment="Top">Edit</Button>
                    <ScrollViewer Grid.Row="2"
                                  VerticalScrollBarVisibility="Auto">
                        <Border x:Name="PreviewWindow"
                                BorderThickness="1"
                                BorderBrush="Gray"/>
                    </ScrollViewer>
                </Grid>
            </Grid>
        </TabItem>
        <TabItem Header="Recent"
                     Name="RecentTab">
            <Grid x:Name="RecentGrid"
                      Margin="5">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
            </Grid>
        </TabItem>
        <TabItem Header="Presets" IsEnabled="False">
            <Grid Background="#FFE5E5E5"/>
        </TabItem>
        <TabItem Header="Settings"
                     Name="SettingsTab">
            <Grid x:Name="SettingsGrid"
                      Margin="10">
                <Grid.RowDefinitions>
                    <RowDefinition Height="20"></RowDefinition>
                    <RowDefinition Height="20*"></RowDefinition>
                    <RowDefinition Height="30"></RowDefinition>
                    <RowDefinition Height="15*"></RowDefinition>
                    <RowDefinition Height="30"></RowDefinition>
                    <RowDefinition Height="15*"></RowDefinition>
                </Grid.RowDefinitions>

                <Label Content="Token"
                   Grid.Row="0"
                   Padding="5,0"></Label>
                <TextBox Name="TokenTextBox" 
                     Text="{Binding Source={x:Static local:Config.Instance}, Path=Token, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                     Grid.Row="1"
                     TextWrapping="Wrap"></TextBox>

                <Label Content="ChatId" 
                   Grid.Row="2" 
                   Padding="5,10,0,0"></Label>
                <TextBox Name="ChatIdTextBox" 
                 Text="{Binding Source={x:Static local:Config.Instance}, Path=ChatId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                 Grid.Row="3"></TextBox>

                <Label Content="ReplyMessageId" 
                   Grid.Row="4"
                   Padding="5,10,0,0"></Label>
                <TextBox Name="ReplyMessageIdTextBox" 
                     Grid.Row="5">
                    <TextBox.Text>
                        <Binding Path="ReplyMessageId" Source="{x:Static local:Config.Instance}" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                            <Binding.Converter>
                                <local:NullInt32Converter/>
                            </Binding.Converter>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
            </Grid>
        </TabItem>
    </TabControl>
</Window>